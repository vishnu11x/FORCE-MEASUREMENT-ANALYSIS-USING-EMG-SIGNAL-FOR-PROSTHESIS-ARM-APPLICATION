/*
 * uart.c
 *
 *  Created on: Sep 28, 2024
 *      Author: Vishnu
 */

#include <uart.h>

extern float_t adc_vdata[NUM_SAMPLE];

void uart_dma_init(void){

	/* Enable Clock */
	RCC -> AHB1ENR |= RCC_AHB1ENR_GPIOAEN; //Clock for GPIOA
	RCC -> APB2ENR |= RCC_APB2ENR_USART1EN;  //Clock for UART1
	RCC -> AHB1ENR |= RCC_AHB1ENR_DMA2EN;  //Clock for DMA2

	/* Configure GPIO */
	GPIOA -> MODER &= ~(GPIO_MODER_MODE9_0);  //PA9 set to alternate function mode
	GPIOA -> MODER |= GPIO_MODER_MODE9_1;

	GPIOA -> AFR[1] &= ~(GPIO_AFRH_AFRH1_3);  //Set AF7
	GPIOA -> AFR[1] |= (GPIO_AFRH_AFRH1_0 | GPIO_AFRH_AFRH1_1 | GPIO_AFRH_AFRH1_2);

	/* Configure UART1 */
	// (peri_clk +(baud rate/2))/baud rate
	USART1 -> BRR = 0x02D9;  //Set baud rate to 115200
	USART1 -> CR1 |= USART_CR1_TE;  //Enable transmitter
	USART1 -> CR3 |= USART_CR3_DMAT;  //Enable DMA transmitter
	USART1 -> CR1 |= USART_CR1_UE;  //Enable UART
}

void dma_uart_tx(uint32_t data, uint32_t data_size){
	/* Configure DMA2 Ch4 S7 */
	DMA2_Stream7 -> CR &= ~(DMA_SxCR_EN);  //Disable DMA
	while(( (DMA2_Stream7 -> CR) & (DMA_SxCR_EN) )){}  // Wait till stream is disable

	//Select Channel 4
	DMA2_Stream7 -> CR &= ~(DMA_SxCR_CHSEL_0 | DMA_SxCR_CHSEL_1);
	DMA2_Stream7 -> CR |= (DMA_SxCR_CHSEL_2);

	DMA2_Stream7 -> PAR = (uint32_t) (&(USART1 -> DR));  //Set Peri address
	DMA2_Stream7 ->M0AR = data;  //Set Mem address
	DMA2_Stream7 -> NDTR = data_size; //Set no.of transfers


	DMA2_Stream7 -> CR |= (DMA_SxCR_MINC); //Enable Mem INC

	DMA2_Stream7 -> CR |= (DMA_SxCR_DIR_0); //Set Direction P to M
	DMA2_Stream7 -> CR &= ~(DMA_SxCR_DIR_1);



}

void uart_start(void){

	DMA2_Stream7 -> CR |= (DMA_SxCR_EN);

}
